# This file is autogenerated by maturin v1.8.2
# To update, run
#
#    maturin generate-ci github
#
name: Build wheels

on:
  push:
    branches:
      - main
      - master
  release:
    types:
      - published
  workflow_dispatch:

permissions:
  contents: read

env:
  MODULE_DIR: pybindings

jobs:
  # Check if the tag matches the package name,
  # or if the workflow is running on a non-release event.
  check-tag:
    name: Check tag
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.check-tag.outputs.run }}
    steps:
      - name: Check tag
        id: check-tag
        run: |
          echo "Should run on this event: $SHOULD_RUN"
          echo "Making release: $MAKING_RELEASE"
          echo "Event name: ${{ github.event_name }}"
          echo "Ref type: ${{ github.ref_type }}"
          echo "Ref: ${{ github.ref }}"

          echo "run=$SHOULD_RUN" >> $GITHUB_OUTPUT
        env:
          SHOULD_RUN: ${{ github.event_name != 'release' || ( github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/quizx-py-v') ) }}
          MAKING_RELEASE: ${{ github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/quizx-py-v') && (github.event_name == 'release'  || github.event_name == 'workflow_dispatch' ) }}

  linux:
    needs: check-tag
    if: ${{ needs.check-tag.outputs.run == 'true' }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out ../dist --find-interpreter
          sccache: 'true'
          manylinux: auto
          working-directory: ${{ env.MODULE_DIR }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    needs: check-tag
    if: ${{ needs.check-tag.outputs.run == 'true' }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out ../dist --find-interpreter
          sccache: 'true'
          manylinux: musllinux_1_2
          working-directory: ${{ env.MODULE_DIR }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    needs: check-tag
    if: ${{ needs.check-tag.outputs.run == 'true' }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out ../dist --find-interpreter
          sccache: 'true'
          working-directory: ${{ env.MODULE_DIR }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    needs: check-tag
    if: ${{ needs.check-tag.outputs.run == 'true' }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out ../dist --find-interpreter
          sccache: 'true'
          working-directory: ${{ env.MODULE_DIR }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    needs: check-tag
    if: ${{ needs.check-tag.outputs.run == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out ../dist
          working-directory: ${{ env.MODULE_DIR }}
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/quizx-py-v') && (github.event_name == 'release'  || github.event_name == 'workflow_dispatch' ) }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
